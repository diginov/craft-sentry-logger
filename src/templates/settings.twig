{% import "_includes/forms" as forms %}

{% macro configWarning(plugin, setting) -%}
    {{ "This is being overridden by the **`{setting}`** parameter in your **`{file}`** config file." |t(plugin.handle, {
        setting: setting,
        file: plugin.handle ~ '.php',
    }) }}
{%- endmacro %}

{% from _self import configWarning %}

{% if isAdvancedConfig %}
    <div class="readable">
        <blockquote class="note warning">
            {{ "You are using the **advanced configuration** method in your **app.php** config file." |t(plugin.handle) |md }}
        </blockquote>
    </div>
{% endif %}

{{ forms.lightswitchField({
    first: not isAdvancedConfig,
    label: "Enabled" |t(plugin.handle),
    instructions: "When enabled, the plugin will send your logs to Sentry." |t(plugin.handle),
    id: 'enabled',
    name: 'enabled',
    on: settings.enabled,
    errors: settings.getErrors('enabled'),
    warning: 'enabled' in overrides |keys ? configWarning(plugin, 'enabled'),
}) }}

{{ forms.lightswitchField({
    label: "Anonymous" |t(plugin.handle),
    instructions: "When enabled, the plugin will not send sensitive user and visitor data to Sentry." |t(plugin.handle),
    id: 'anonymous',
    name: 'anonymous',
    on: settings.anonymous,
    errors: settings.getErrors('anonymous'),
    warning: 'anonymous' in overrides |keys ? configWarning(plugin, 'anonymous'),
}) }}

{{ forms.hidden({
    id: 'userPrivacy',
    name: 'userPrivacy[]',
}) }}

{{ forms.checkboxSelectField({
    label: "User privacy settings" |t(plugin.handle),
    instructions: "What sensitive data will be sent to Sentry when the **Anonymous** setting is disabled?" |t(plugin.handle),
    id: 'userPrivacy',
    name: 'userPrivacy',
    options: [
        { label: "ID" |t(plugin.handle), value: 'id' },
        { label: "Email" |t(plugin.handle), value: 'email' },
        { label: "Username" |t(plugin.handle), value: 'username' },
        { label: "IP Address" |t(plugin.handle), value: 'ip_address' },
        { label: "Cookies" |t(plugin.handle), value: 'cookies' },
        { label: "Permissions" |t(plugin.handle), value: 'permissions' },
    ],
    values: settings.userPrivacy,
    required: true,
    errors: settings.getErrors('userPrivacy'),
    warning: 'userPrivacy' in overrides |keys ? configWarning(plugin, 'userPrivacy'),
}) }}

{{ forms.autosuggestField({
    label: "Client Key (DSN)" |t(plugin.handle),
    instructions: "To send logs to Sentry you need to add your Client Key (DSN) which can be found in your [project settings](https://sentry.io/settings/)." |t(plugin.handle),
    id: 'dsn',
    name: 'dsn',
    value: settings.dsn,
    suggestEnvVars: true,
    required: true,
    errors: settings.getErrors('dsn'),
    warning: 'dsn' in overrides |keys ? configWarning(plugin, 'dsn'),
}) }}

{{ forms.autosuggestField({
    label: "Sentry Release" |t(plugin.handle),
    instructions: "The version of the application that is deployed to your environment. Can be left blank to not use this feature." |t(plugin.handle),
    id: 'release',
    name: 'release',
    value: settings.release,
    suggestEnvVars: true,
    errors: settings.getErrors('release'),
    warning: 'release' in overrides |keys ? configWarning(plugin, 'release'),
}) }}

{{ forms.autosuggestField({
    label: "Sentry Environment" |t(plugin.handle),
    instructions: "The environment tag that designate where your application is deployed. Defaults to the current Craft environment." |t(plugin.handle),
    id: 'environment',
    name: 'environment',
    value: settings.environment,
    suggestEnvVars: true,
    errors: settings.getErrors('environment'),
    warning: 'environment' in overrides |keys ? configWarning(plugin, 'environment'),
}) }}

{{ forms.hidden({
    id: 'levels',
    name: 'levels[]',
}) }}

{{ forms.checkboxSelectField({
    label: "Included log levels" |t(plugin.handle),
    instructions: "What logging levels do you want to send to Sentry?" |t(plugin.handle),
    id: 'levels',
    name: 'levels',
    options: [
        { label: "Error" |t(plugin.handle), value: 'error' },
        { label: "Warning" |t(plugin.handle), value: 'warning' },
    ],
    values: settings.levels,
    required: true,
    errors: settings.getErrors('levels'),
    warning: 'levels' in overrides |keys ? configWarning(plugin, 'levels'),
}) }}

{{ forms.textField({
    label: "Excluded HTTP status codes" |t(plugin.handle),
    instructions: "Comma separated list of HTTP status codes that should not be sent to Sentry." |t(plugin.handle),
    id: 'exceptCodes',
    name: 'exceptCodes[]',
    placeholder: '403, 404',
    value: settings.exceptCodes |join(', '),
    errors: settings.getErrors('exceptCodes'),
    warning: 'exceptCodes' in overrides |keys ? configWarning(plugin, 'exceptCodes'),
}) }}

{{ forms.textField({
    label: "Excluded search patterns" |t(plugin.handle),
    instructions: "Comma separated list of search patterns (regex) that should not be sent to Sentry." |t(plugin.handle),
    id: 'exceptPatterns',
    name: 'exceptPatterns[]',
    value: settings.exceptPatterns |join(', '),
    errors: settings.getErrors('exceptPatterns'),
    warning: 'exceptPatterns' in overrides |keys ? configWarning(plugin, 'exceptPatterns'),
}) }}

<hr>

{% set button = '<button type="button" class="btn formsubmit" data-action="' ~ plugin.handle ~ '/test">' ~ "Create test data" |t(plugin.handle) ~ '</button>' %}

{{ forms.field({
    label: "Configuration test" |t(plugin.handle),
    instructions: "Creates a dummy error and warning which may or may not be sent to Sentry based on your current configuration. Make sure to save your configuration before testing." |t(plugin.handle),
}, button) }}
